name: Build Manager

on:
  push:
    tags: [ "*" ]
    branches: [ "main" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'apd/**'
      - 'build.gradle.kts'
      - 'gradle/libs.versions.toml'
  workflow_call:
  workflow_dispatch:

jobs:
  build-manager:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate version
        id: parse_version
        run: |
          COMMIT_NUM=$(git rev-list --count HEAD)
          VERSION=$((COMMIT_NUM + 200 + 10000))
          echo "Generated Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Setup Java and Gradle
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''
          # 移除了cache配置，因为setup-android没有这个输入参数

      - name: Install Rust toolchain
        run: |
          rustup default stable
          rustup update stable
          cargo install cargo-ndk
          rustup target install aarch64-linux-android

      - name: Build with Gradle
        run: |
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          ./gradlew clean assembleRelease

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: APatch
          path: app/build/outputs/apk/release/*.apk

      - name: Release apk
        continue-on-error: false
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.parse_version.outputs.VERSION }}
          artifacts: app/build/outputs/apk/release/*.apk
          generateReleaseNotes: true
          makeLatest: true
          replacesArtifacts: true
